{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Yet Another Node.js Blogg Application API",
      "description": "Yet Another Node.js Blogg Application API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "tags": [
      {
        "name": "Saka Notes",
        "description": "API to organize notes"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/notes": {
        "post": {
          "tags": [
            "Notes"
          ],
          "description": "Create new note in system",
          "parameters": [
            {
              "name": "note",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Notes"
          ],
          "summary": "Get all notes in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Notes"
              }
            }
          }
        }
      },
      "/notes/{noteId}": {
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "required": true,
            "description": "ID of note that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Notes"
          ],
          "summary": "Get note with given ID",
          "responses": {
            "200": {
              "description": "Note is found",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete note with given ID",
          "tags": [
            "Notes"
          ],
          "responses": {
            "200": {
              "description": "Note is deleted",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          }
        },
        "put": {
          "summary": "Update note with give ID",
          "tags": [
            "Notes"
          ],
          "parameters": [
            {
              "name": "noteId",
              "in": "path",
              "required": true,
              "description": "ID of note that we want to find",
              "type": "string"
            },
            {
              "name": "note",
              "in": "body",
              "description": "Note with new values of properties",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Note is updated",
              "schema": {
                "$ref": "#/definitions/Note"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Note": {
        "required": [
          "content"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "uniqueItems": true
          }
        }
      },
      "Notes": {
        "type": "array",
        "$ref": "#/definitions/Note"
      }
    }
  }
  